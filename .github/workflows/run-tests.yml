name: Tests
on:
  push:
    branches:
      - development
      - master
      - tests

  pull_request:
    branches:
      - development
      - master
      - tests

jobs:
  runner-job:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository code
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: Run migrations
        run: |
          psql -f testing/fixtures/init.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_page.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_tag.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_area_priorities.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_area_reference.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_metric_reference.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_release_reference.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_release_category.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/partitions.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/time_series_p2021_3_5_msoa.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/time_series_p2021_3_5_utla.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_announcement.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_change_log.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_change_log_to_metric.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_change_log_to_page.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_metric_asset.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_metric_asset_to_metric.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_metric_tag.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_area_relation.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/citus_covid19_page_area_type_reference.sql postgresql://postgres:postgres@localhost:5432/postgres && \
          psql -f testing/fixtures/postcode_lookup.sql postgresql://postgres:postgres@localhost:5432/postgres

      - name: Install LIBC6
        working-directory: service
        shell: bash
        run: |
          sudo apt install -y gcc-9-base libgcc-9-dev libc6-dev libc6=2.31-0ubuntu9.2 libc-bin=2.31-0ubuntu9.2

      - name: Install Ngnix/Unit
        working-directory: service
        shell: bash
        run: |
          sudo apt-key adv --fetch-keys http://deb.opera.com/archive.key https://nginx.org/keys/nginx_signing.key && \
          sudo touch /etc/apt/sources.list.d/unit.list && \
          echo "deb https://packages.nginx.org/unit/ubuntu/ hirsute unit" | sudo tee -a /etc/apt/sources.list.d/unit.list
          echo "deb-src https://packages.nginx.org/unit/ubuntu/ hirsute unit" | sudo tee -a /etc/apt/sources.list.d/unit.list
          sudo apt update && \
          sudo apt install -y libc6 && \
          sudo apt install -y unit && \
          sudo apt install -y unit-dev unit-go && \
          sudo systemctl restart unit

      - name: Build Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15'

      - name: Install dependencies
        working-directory: service/src
        shell: bash
        run: go get

      - working-directory: service/src
        shell: bash
        run: mkdir build

      - name: Run build test
        shell: bash
        working-directory: service/src
        run: go build -o ../build/generic_api

      - name: Run application tests
        shell: bash
        working-directory: service/src
        run: go test -v ./...
        env:
          POSTGRES_CONNECTION_STRING: postgres://postgres:postgres@localhost/postgres
          DeploymentBlobStorage: ""
